(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

/**
 * Created by movsessaponjyan on 4/14/18.
 */

angular.module("app", ['ngAnimate', 'ngResource', 'ngCookies', 'ngMaterial', 'ngMessages']).factory('question', function ($resource) {
    return $resource("/v1/api/questions", {}, {
        getAll: { method: 'GET', isArray: true },
        setAnswer: { method: 'POST' }
    });
}).factory('user', function ($resource) {
    return $resource("/v1/api/:type", {}, {
        getUserInfo: { method: 'GET', params: { type: 'user' } },
        getAllUser: { method: 'GET', params: { type: 'users' }, isArray: true }
    });
}).factory('hero', function ($resource) {
    return $resource("/v1/api/:type", {}, {
        getHeroInfo: { method: 'GET', params: { type: "hero" } },
        getHeroLeaderInfo: { method: 'GET', params: { type: "heros" }, isArray: true }
    });
}).controller("mainCtrl", function ($scope, $timeout, question, user, hero, $cookies) {

    $scope.selectAnswer = null;

    $scope.changePages = function () {
        $scope.homePage = false;
        $scope.rulesPage = false;
        $scope.votePage = false;
        $scope.leaderboardPage = false;
    };
    $scope.changePages($scope.homePage);

    $scope.homePage = true;

    $scope.guessPageAction = function () {
        $scope.changePages();
        $timeout(function () {
            $scope.rulesPage = true;

            $timeout(function () {
                jQuery(document).ready(function ($) {
                    $(function () {
                        $('.write-text').typewriter({
                            sound: true,
                            cursorVisible: false,
                            cursorColor: "#551A8B",
                            randomTypeSpeed: true
                        });
                    });
                });
            }, 400);
        }, 1000);
    };

    $timeout(function () {
        $scope.guessPageAction();
    }, 2500);

    $scope.setAnswer = function (answer) {
        $scope.selectAnswer = answer;
    };

    $scope.approveAnswer = function () {

        if ($scope.selectAnswer != null) {
            console.log($scope.selectAnswer);

            question.setAnswer({}, { _id: $scope.questions[$scope.questionKey][0]._id, option: $scope.selectAnswer }, function (response) {
                $scope.selectAnswer = null;
                $scope.questionKey++;
                if ($scope.questionKey > 4) {
                    $scope.leaderboardPageAction();
                }
            });
        } else {
            console.log("Choose");
        }
    };

    $scope.votePageAction = function () {

        hero.getHeroInfo({}, {}, function (response) {
            $scope.hero = response;
            user.getUserInfo({}, {}, function (response) {
                $cookies.put("_id", response._id);

                $scope.changePages();
                $scope.questionKey = 0;

                question.getAll({}, {}, function (response) {
                    console.log(response);
                    $scope.questions = response;
                });

                $timeout(function () {
                    $scope.votePage = true;
                }, 1000);
            });
        });
    };

    $scope.leaderboardPageAction = function () {
        $scope.changePages();

        user.getAllUser({}, {}, function (response) {
            console.log(response);
            $scope.userList = response;
        });

        $timeout(function () {
            $scope.leaderboardPage = true;
        }, 1000);
    };

    $scope.leaderboardHeroPageAction = function () {
        $scope.changePages();

        hero.getHeroLeaderInfo({}, {}, function (response) {
            $scope.userList = response;

            angular.forEach($scope.userList, function (data) {
                data.score = data.heroScore;
            });
        });

        $timeout(function () {
            $scope.leaderboardPage = true;
        }, 1000);
    };

    // $scope.votePageAction(); //tmp

});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwdWJsaWMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBOzs7O0FBS0EsUUFDSyxNQURMLENBQ1ksS0FEWixFQUNrQixDQUFDLFdBQUQsRUFBYSxZQUFiLEVBQTBCLFdBQTFCLEVBQXNDLFlBQXRDLEVBQW1ELFlBQW5ELENBRGxCLEVBRUssT0FGTCxDQUVhLFVBRmIsRUFFeUIsVUFBVSxTQUFWLEVBQXFCO0FBQ3RDLFdBQU8sVUFBVSxtQkFBVixFQUE4QixFQUE5QixFQUFpQztBQUNwQyxnQkFBUSxFQUFDLFFBQVEsS0FBVCxFQUFlLFNBQVEsSUFBdkIsRUFENEI7QUFFcEMsbUJBQVcsRUFBQyxRQUFRLE1BQVQ7QUFGeUIsS0FBakMsQ0FBUDtBQUlILENBUEwsRUFRSyxPQVJMLENBUWEsTUFSYixFQVFxQixVQUFVLFNBQVYsRUFBcUI7QUFDbEMsV0FBTyxVQUFVLGVBQVYsRUFBMEIsRUFBMUIsRUFBNkI7QUFDaEMscUJBQWEsRUFBQyxRQUFRLEtBQVQsRUFBZSxRQUFPLEVBQUMsTUFBSyxNQUFOLEVBQXRCLEVBRG1CO0FBRWhDLG9CQUFZLEVBQUMsUUFBUSxLQUFULEVBQWUsUUFBTyxFQUFDLE1BQUssT0FBTixFQUF0QixFQUFxQyxTQUFRLElBQTdDO0FBRm9CLEtBQTdCLENBQVA7QUFJSCxDQWJMLEVBY0ssT0FkTCxDQWNhLE1BZGIsRUFjcUIsVUFBVSxTQUFWLEVBQXFCO0FBQ2xDLFdBQU8sVUFBVSxlQUFWLEVBQTBCLEVBQTFCLEVBQTZCO0FBQ2hDLHFCQUFhLEVBQUMsUUFBUSxLQUFULEVBQWUsUUFBTyxFQUFDLE1BQUssTUFBTixFQUF0QixFQURtQjtBQUVoQywyQkFBbUIsRUFBQyxRQUFRLEtBQVQsRUFBZSxRQUFPLEVBQUMsTUFBSyxPQUFOLEVBQXRCLEVBQXFDLFNBQVEsSUFBN0M7QUFGYSxLQUE3QixDQUFQO0FBSUgsQ0FuQkwsRUFvQkss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SyxVQUFMLENBQWdCLEVBQWhCLEVBQW1CLEVBQW5CLEVBQXNCLFVBQVUsUUFBVixFQUFvQjtBQUN0QyxvQkFBUSxHQUFSLENBQVksUUFBWjtBQUNBLG1CQUFPLFFBQVAsR0FBa0IsUUFBbEI7QUFDSCxTQUhEOztBQUtBLGlCQUFTLFlBQVk7QUFDakIsbUJBQU8sZUFBUCxHQUF5QixJQUF6QjtBQUNILFNBRkQsRUFFRSxJQUZGO0FBSUgsS0FaRDs7QUFjQSxXQUFPLHlCQUFQLEdBQW1DLFlBQVk7QUFDM0MsZUFBTyxXQUFQOztBQUVBLGFBQUssaUJBQUwsQ0FBdUIsRUFBdkIsRUFBMEIsRUFBMUIsRUFBNkIsVUFBVSxRQUFWLEVBQW9CO0FBQzdDLG1CQUFPLFFBQVAsR0FBa0IsUUFBbEI7O0FBRUEsb0JBQVEsT0FBUixDQUFnQixPQUFPLFFBQXZCLEVBQWdDLFVBQVUsSUFBVixFQUFnQjtBQUM1QyxxQkFBSyxLQUFMLEdBQWEsS0FBSyxTQUFsQjtBQUNILGFBRkQ7QUFJSCxTQVBEOztBQVNBLGlCQUFTLFlBQVk7QUFDakIsbUJBQU8sZUFBUCxHQUF5QixJQUF6QjtBQUNILFNBRkQsRUFFRSxJQUZGO0FBR0gsS0FmRDs7QUFpQkE7O0FBSUgsQ0E5SUwiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvKipcbiAqIENyZWF0ZWQgYnkgbW92c2Vzc2Fwb25qeWFuIG9uIDQvMTQvMTguXG4gKi9cblxuXG5hbmd1bGFyXG4gICAgLm1vZHVsZShcImFwcFwiLFsnbmdBbmltYXRlJywnbmdSZXNvdXJjZScsJ25nQ29va2llcycsJ25nTWF0ZXJpYWwnLCduZ01lc3NhZ2VzJ10pXG4gICAgLmZhY3RvcnkoJ3F1ZXN0aW9uJywgZnVuY3Rpb24gKCRyZXNvdXJjZSkge1xuICAgICAgICByZXR1cm4gJHJlc291cmNlKFwiL3YxL2FwaS9xdWVzdGlvbnNcIix7fSx7XG4gICAgICAgICAgICBnZXRBbGw6IHttZXRob2Q6ICdHRVQnLGlzQXJyYXk6dHJ1ZX0sXG4gICAgICAgICAgICBzZXRBbnN3ZXI6IHttZXRob2Q6ICdQT1NUJ31cbiAgICAgICAgfSk7XG4gICAgfSlcbiAgICAuZmFjdG9yeSgndXNlcicsIGZ1bmN0aW9uICgkcmVzb3VyY2UpIHtcbiAgICAgICAgcmV0dXJuICRyZXNvdXJjZShcIi92MS9hcGkvOnR5cGVcIix7fSx7XG4gICAgICAgICAgICBnZXRVc2VySW5mbzoge21ldGhvZDogJ0dFVCcscGFyYW1zOnt0eXBlOid1c2VyJ319LFxuICAgICAgICAgICAgZ2V0QWxsVXNlcjoge21ldGhvZDogJ0dFVCcscGFyYW1zOnt0eXBlOid1c2Vycyd9LGlzQXJyYXk6dHJ1ZX1cbiAgICAgICAgfSk7XG4gICAgfSlcbiAgICAuZmFjdG9yeSgnaGVybycsIGZ1bmN0aW9uICgkcmVzb3VyY2UpIHtcbiAgICAgICAgcmV0dXJuICRyZXNvdXJjZShcIi92MS9hcGkvOnR5cGVcIix7fSx7XG4gICAgICAgICAgICBnZXRIZXJvSW5mbzoge21ldGhvZDogJ0dFVCcscGFyYW1zOnt0eXBlOlwiaGVyb1wifX0sXG4gICAgICAgICAgICBnZXRIZXJvTGVhZGVySW5mbzoge21ldGhvZDogJ0dFVCcscGFyYW1zOnt0eXBlOlwiaGVyb3NcIn0saXNBcnJheTp0cnVlfVxuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jb250cm9sbGVyKFwibWFpbkN0cmxcIixmdW5jdGlvbiAoJHNjb3BlLCR0aW1lb3V0LHF1ZXN0aW9uLHVzZXIsaGVybywkY29va2llcykge1xuXG4gICAgICAgICRzY29wZS5zZWxlY3RBbnN3ZXIgPSBudWxsO1xuXG4gICAgICAgICRzY29wZS5jaGFuZ2VQYWdlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRzY29wZS5ob21lUGFnZSA9IGZhbHNlO1xuICAgICAgICAgICAgJHNjb3BlLnJ1bGVzUGFnZSA9IGZhbHNlO1xuICAgICAgICAgICAgJHNjb3BlLnZvdGVQYWdlID0gZmFsc2U7XG4gICAgICAgICAgICAkc2NvcGUubGVhZGVyYm9hcmRQYWdlID0gZmFsc2U7XG4gICAgICAgIH07XG4gICAgICAgICRzY29wZS5jaGFuZ2VQYWdlcygkc2NvcGUuaG9tZVBhZ2UpO1xuXG4gICAgICAgICRzY29wZS5ob21lUGFnZSA9IHRydWU7XG5cbiAgICAgICAgJHNjb3BlLmd1ZXNzUGFnZUFjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRzY29wZS5jaGFuZ2VQYWdlcygpO1xuICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5ydWxlc1BhZ2UgPSB0cnVlO1xuXG5cbiAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGpRdWVyeSggZG9jdW1lbnQgKS5yZWFkeShmdW5jdGlvbiggJCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy53cml0ZS10ZXh0JykudHlwZXdyaXRlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3JWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yQ29sb3I6IFwiIzU1MUE4QlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5kb21UeXBlU3BlZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LDQwMCk7XG5cbiAgICAgICAgICAgIH0sMTAwMCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJHNjb3BlLmd1ZXNzUGFnZUFjdGlvbigpO1xuICAgICAgICB9LDI1MDApO1xuXG4gICAgICAgICRzY29wZS5zZXRBbnN3ZXIgPSBmdW5jdGlvbiAoYW5zd2VyKSB7XG4gICAgICAgICAgICAkc2NvcGUuc2VsZWN0QW5zd2VyID0gYW5zd2VyO1xuICAgICAgICB9O1xuXG4gICAgICAgICRzY29wZS5hcHByb3ZlQW5zd2VyID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICBpZiAoJHNjb3BlLnNlbGVjdEFuc3dlciAhPSBudWxsKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygkc2NvcGUuc2VsZWN0QW5zd2VyKTtcblxuICAgICAgICAgICAgICAgIHF1ZXN0aW9uLnNldEFuc3dlcih7fSx7X2lkOiRzY29wZS5xdWVzdGlvbnNbJHNjb3BlLnF1ZXN0aW9uS2V5XVswXS5faWQsb3B0aW9uOiRzY29wZS5zZWxlY3RBbnN3ZXJ9LGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc2VsZWN0QW5zd2VyID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnF1ZXN0aW9uS2V5Kys7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGUucXVlc3Rpb25LZXkgPiA0KXtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5sZWFkZXJib2FyZFBhZ2VBY3Rpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNob29zZVwiKTtcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAkc2NvcGUudm90ZVBhZ2VBY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG5cblxuICAgICAgICAgICAgaGVyby5nZXRIZXJvSW5mbyh7fSx7fSxmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuaGVybyA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIHVzZXIuZ2V0VXNlckluZm8oe30se30sZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICRjb29raWVzLnB1dChcIl9pZFwiLCByZXNwb25zZS5faWQpO1xuXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5jaGFuZ2VQYWdlcygpO1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucXVlc3Rpb25LZXkgPSAwO1xuXG4gICAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uLmdldEFsbCh7fSx7fSxmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5xdWVzdGlvbnMgPSByZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnZvdGVQYWdlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSwxMDAwKTtcblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLmxlYWRlcmJvYXJkUGFnZUFjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRzY29wZS5jaGFuZ2VQYWdlcygpO1xuXG4gICAgICAgICAgICB1c2VyLmdldEFsbFVzZXIoe30se30sZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICRzY29wZS51c2VyTGlzdCA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUubGVhZGVyYm9hcmRQYWdlID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sMTAwMCk7XG5cbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUubGVhZGVyYm9hcmRIZXJvUGFnZUFjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRzY29wZS5jaGFuZ2VQYWdlcygpO1xuXG4gICAgICAgICAgICBoZXJvLmdldEhlcm9MZWFkZXJJbmZvKHt9LHt9LGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICRzY29wZS51c2VyTGlzdCA9IHJlc3BvbnNlO1xuXG4gICAgICAgICAgICAgICAgYW5ndWxhci5mb3JFYWNoKCRzY29wZS51c2VyTGlzdCxmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBkYXRhLnNjb3JlID0gZGF0YS5oZXJvU2NvcmU7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmxlYWRlcmJvYXJkUGFnZSA9IHRydWU7XG4gICAgICAgICAgICB9LDEwMDApO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vICRzY29wZS52b3RlUGFnZUFjdGlvbigpOyAvL3RtcFxuXG5cblxuICAgIH0pOyJdfQ==
